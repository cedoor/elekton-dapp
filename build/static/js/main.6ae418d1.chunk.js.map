{"version":3,"sources":["reportWebVitals.ts","context/AuthContext.tsx","logo/logo.svg","logo/dark-logo.svg","screens/Login.tsx","data/ballots.ts","screens/Ballots.tsx","App.tsx","hooks/useAuth.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","React","createContext","useStyles","makeStyles","theme","createStyles","container","display","alignItems","justifyContent","flexDirection","paddingBottom","spacing","flex","height","logo","pointerEvents","Login","classes","auth","useContext","AuthContext","useTheme","Container","className","maxWidth","src","palette","type","darkLogo","alt","Button","onClick","signIn","variant","name","description","startDate","endDate","proposals","voterPublicKeys","Ballots","useState","wait","setWait","useEffect","timer","setTimeout","clearTimeout","List","component","ballots","map","ballot","i","ListItem","button","ListItemText","primary","secondary","Box","px","py","Skeleton","width","menuButton","marginRight","title","flexGrow","list","userInformation","padding","App","_user","setUser","history","useHistory","signOut","push","user","replace","useAuth","prefersDarkMode","useMediaQuery","_drawer","toggleDrawer","_darkTheme","setDarkTheme","useMemo","dark","createMuiTheme","main","Provider","value","ThemeProvider","Paper","elevation","square","AppBar","color","position","Toolbar","IconButton","edge","Drawer","anchor","open","onClose","role","onKeyDown","Typography","Divider","ListItemIcon","path","to","pathname","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ae418d1.chunk.js","sourcesContent":["import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\n\nexport type AuthContextType = {\n    _user: string | null\n    signIn: (user: string) => void\n    signOut: () => void\n}\n\nexport default React.createContext<AuthContextType | null>(null)\n","export default __webpack_public_path__ + \"static/media/logo.ca4458e0.svg\";","export default __webpack_public_path__ + \"static/media/dark-logo.90623316.svg\";","import React from \"react\"\nimport AuthContext from \"../context/AuthContext\"\nimport Button from \"@material-ui/core/Button\"\nimport Container from \"@material-ui/core/Container\"\nimport createStyles from \"@material-ui/core/styles/createStyles\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\"\nimport { useTheme, Theme } from \"@material-ui/core\"\nimport logo from \"../logo/logo.svg\"\nimport darkLogo from \"../logo/dark-logo.svg\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            paddingBottom: theme.spacing(8),\n            flex: 1,\n            height: \"100vh\"\n        },\n        logo: {\n            height: \"200px\",\n            pointerEvents: \"none\",\n            paddingBottom: theme.spacing(6)\n        }\n    })\n)\n\nexport default function Login() {\n    const classes = useStyles()\n    const auth = React.useContext(AuthContext)\n    const theme = useTheme()\n\n    return (\n        <Container className={classes.container} maxWidth=\"md\">\n            <img className={classes.logo} src={theme.palette.type === \"dark\" ? darkLogo : logo} alt=\"logo\" />\n            <Button onClick={() => auth?.signIn(\"pinco\")} variant=\"outlined\">\n                Sign in\n            </Button>\n        </Container>\n    )\n}\n","import { BallotInputData } from \"elekton/dist/types/types\"\n\nexport default [\n    {\n        name: \"Parliamentary cut\",\n        description: \"Do you want to reduce the number of parliamentarians?\",\n        startDate: 1598018870924,\n        endDate: 1598105270924,\n        proposals: [\"Yes\", \"No\"],\n        voterPublicKeys: [\"Pinco\", \"Pallino\"]\n    },\n    {\n        name: \"Regional ballot\",\n        description: \"Which party do you want to vote for?\",\n        startDate: 1599562562693,\n        endDate: 1599684522693,\n        proposals: [\"PSI\", \"PA\", \"DC\"],\n        voterPublicKeys: [\"Pinco\", \"Pallino\"]\n    },\n    {\n        name: \"National ballot\",\n        description: \"Which party do you want to vote for?\",\n        startDate: 1598018870924,\n        endDate: 1598105270924,\n        proposals: [\"PSI\", \"PA\", \"DC\"],\n        voterPublicKeys: [\"Pinco\", \"Pallino\"]\n    }\n] as BallotInputData[]\n","import React from \"react\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Container from \"@material-ui/core/Container\"\nimport Box from \"@material-ui/core/Box\"\nimport Skeleton from \"@material-ui/lab/Skeleton\"\nimport ballots from \"../data/ballots\"\nimport { BallotInputData } from \"elekton/dist/types/types\"\n\nexport default function Ballots() {\n    const [wait, setWait] = React.useState<boolean>(false)\n\n    React.useEffect(() => {\n        const timer = setTimeout(() => {\n            setWait(true)\n        }, 1000)\n\n        return () => clearTimeout(timer)\n    }, [])\n\n    return (\n        <Container maxWidth=\"md\">\n            {wait ? (\n                <List component=\"nav\">\n                    {ballots.map((ballot: BallotInputData, i) => (\n                        <ListItem key={i} button>\n                            <ListItemText primary={ballot.name} secondary={ballot.description} />\n                        </ListItem>\n                    ))}\n                </List>\n            ) : (\n                ballots.map((ballot: BallotInputData, i) => (\n                    <Box px={2} py={1} key={i}>\n                        <Skeleton variant=\"text\" width={120} height={30} />\n                        <Skeleton variant=\"text\" width={300} height={26} />\n                    </Box>\n                ))\n            )}\n        </Container>\n    )\n}\n","import React from \"react\"\nimport { Switch, Route, Redirect } from \"react-router-dom\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport List from \"@material-ui/core/List\"\nimport Divider from \"@material-ui/core/Divider\"\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles, Theme, createStyles, useMediaQuery, createMuiTheme, ThemeProvider } from \"@material-ui/core\"\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\"\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\"\nimport Login from \"./screens/Login\"\nimport AuthContext from \"./context/AuthContext\"\nimport useAuth from \"./hooks/useAuth\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Ballots from \"./screens/Ballots\"\nimport Paper from \"@material-ui/core/Paper\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: \"flex\"\n        },\n        menuButton: {\n            marginRight: theme.spacing(2)\n        },\n        title: {\n            flexGrow: 1\n        },\n        list: {\n            width: 250\n        },\n        userInformation: {\n            padding: theme.spacing(2)\n        }\n    })\n)\n\nexport default function App() {\n    const classes = useStyles()\n    const auth = useAuth()\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\")\n    const [_drawer, toggleDrawer] = React.useState<boolean>(false)\n    const [_darkTheme, setDarkTheme] = React.useState<boolean | null>(null)\n\n    const theme = React.useMemo(() => {\n        const dark = _darkTheme !== null ? _darkTheme : prefersDarkMode\n\n        return createMuiTheme({\n            palette: {\n                type: dark ? \"dark\" : \"light\",\n                primary: {\n                    main: \"#33691E\"\n                },\n                secondary: {\n                    main: \"#dcedc8\"\n                }\n            }\n        })\n    }, [prefersDarkMode, _darkTheme])\n\n    return (\n        <AuthContext.Provider value={auth}>\n            <ThemeProvider theme={theme}>\n                <Paper className={classes.container} elevation={0} square={true}>\n                    <AppBar color=\"inherit\" elevation={0} position=\"static\">\n                        <Toolbar>\n                            {auth._user && (\n                                <div>\n                                    <IconButton\n                                        edge=\"start\"\n                                        className={classes.menuButton}\n                                        onClick={() => toggleDrawer(true)}\n                                    >\n                                        <MenuIcon />\n                                    </IconButton>\n\n                                    <Drawer anchor=\"left\" open={_drawer} onClose={() => toggleDrawer(false)}>\n                                        <div\n                                            className={classes.list}\n                                            role=\"presentation\"\n                                            onClick={() => toggleDrawer(false)}\n                                            onKeyDown={() => toggleDrawer(false)}\n                                        >\n                                            <div className={classes.userInformation}>\n                                                <Typography variant=\"body1\">Pinco Pallino</Typography>\n                                                <Typography variant=\"caption\">@Pinco</Typography>\n                                            </div>\n                                            <Divider />\n                                            <List>\n                                                <ListItem onClick={() => auth.signOut()} button>\n                                                    <ListItemIcon>\n                                                        <ExitToAppIcon />\n                                                    </ListItemIcon>\n                                                    <ListItemText primary=\"Sign out\" />\n                                                </ListItem>\n                                            </List>\n                                        </div>\n                                    </Drawer>\n                                </div>\n                            )}\n\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {auth._user && \"Ballots\"}\n                            </Typography>\n\n                            <IconButton edge=\"end\" onClick={() => setDarkTheme(theme.palette.type !== \"dark\")}>\n                                {theme.palette.type !== \"dark\" ? <Brightness4Icon /> : <Brightness7Icon />}\n                            </IconButton>\n                        </Toolbar>\n                    </AppBar>\n                    <Switch>\n                        <Route path=\"/elections\">\n                            {auth._user ? <Ballots /> : <Redirect to={{ pathname: \"/\" }} />}\n                        </Route>\n                        <Route path=\"/\">\n                            <Login />\n                        </Route>\n                    </Switch>\n                </Paper>\n            </ThemeProvider>\n        </AuthContext.Provider>\n    )\n}\n","import React from \"react\"\nimport { useHistory } from \"react-router\"\nimport { AuthContextType } from \"../context/AuthContext\"\n\nexport default function useAuth(): AuthContextType {\n    const [_user, setUser] = React.useState<string | null>(null)\n\n    const history = useHistory()\n\n    const signIn = (user: string) => {\n        setUser(user)\n        history.replace(\"/elections\")\n    }\n\n    const signOut = () => {\n        setUser(null)\n        history.push(\"/\")\n    }\n\n    return {\n        _user,\n        signOut,\n        signIn\n    }\n}\n","import ReactDOM from \"react-dom\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}